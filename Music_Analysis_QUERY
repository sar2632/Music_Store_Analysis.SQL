CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    last_name VARCHAR(50),
    first_name VARCHAR(50),
    job_title VARCHAR(100),
    report_to INT,
    levels INT
);

COPY employees from 'C:\Program Files\PostgreSQL\16\data\album2.csv'  DELIMITER ',' CSV HEADER;






CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    last_name VARCHAR(50),
    first_name VARCHAR(50),
    title VARCHAR(50),
    report_to varchar(50),
    levels varchar(10),
	birthdate date,
	hire_date date,
	address varchar(100),
	city varchar(50),
	state varchar(50),
	country varchar(50),
	postal_code varchar(20),
	phone varchar(20),
	fax varchar(50),
    email varchar(50)
	);
	


COPY employees from 'C:\Program Files\PostgreSQL\16\data\employee.csv'  DELIMITER ',' CSV HEADER;





select * from employees;

CREATE TABLE invoices (
    invoice_id int PRIMARY KEY,
    customer_id INT,
    invoice_date DATE,
    billing_address VARCHAR(255),
    billing_city VARCHAR(100),
    billing_state VARCHAR(100),
    billing_country VARCHAR(100),
    billing_postal_code VARCHAR(20),
    total DECIMAL(10, 2)
);


COPY invoices from 'C:\Program Files\PostgreSQL\16\data\invoice.csv'  DELIMITER ',' CSV HEADER;

CREATE TABLE customer_music (
    customer_id int PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(100),
    company varchar(100),
	address varchar(100),
    city VARCHAR(100),
    state VARCHAR(100),
	country varchar(150),
    postal_code VARCHAR(20),
	phone varchar(100),
	fax varchar(100),
	email varchar(100),
	support_rep_id integer
    );
copy customer_music from  'C:\Program Files\PostgreSQL\16\data\customer_music.csv'  DELIMITER ',' CSV HEADER;

create table genre (
        genre_id int primary key,
        name varchar(50)
);
copy genre from 'C:\Program Files\PostgreSQL\16\data\genre.csv'  DELIMITER ',' CSV HEADER;

      create table artist (
  artist_id int primary key,
        name varchar(100)
);
copy artist from 'C:\Program Files\PostgreSQL\16\data\artist.csv'  DELIMITER ',' CSV HEADER;

      create table media_type (
  media_type int primary key,
        name varchar(100)
);
copy media_type from 'C:\Program Files\PostgreSQL\16\data\media_type.csv'  DELIMITER ',' CSV HEADER;

create table invoice_line (
            invoice_line_id int primary key,
	        invoice_id int,
	        track_id int,
	        unit_price numeric (5,2),
	        quantity int
       );
	   copy invoice_line from 'C:\Program Files\PostgreSQL\16\data\invoice_line.csv'  DELIMITER ',' CSV HEADER;
	   
	   create table playlist (
        playist_id int primary key,
        name varchar(50)
);

copy playlist from 'C:\Program Files\PostgreSQL\16\data\playlist.csv'  DELIMITER ',' CSV HEADER;

 
 create table playlist_track (
        playlist_id int,
        name varchar(50)
);
     copy playlist_track from 'C:\Program Files\PostgreSQL\16\data\playlist_track.csv'  DELIMITER ',' CSV HEADER;
	 
	 
	 create table track (
	  track_id int primary key,
	  name varchar(500),
	   album_id int,
		medium_type_id int,
		 genre_id int,
		 composer varchar(500),
		 millisecond bigint,
		 bytes bigint,
		 unit_price numeric(5,2)
		  );
	 copy track from 'C:\Program Files\PostgreSQL\16\data\track.csv'  DELIMITER ',' CSV HEADER;
	   

Q1: Who is the senior most employees based on job title?
select * from employees
order by levels desc
limit 1;
ANS: Madan Mohan(employee_id=9)


 Q2: Which country have the most invoices?
 Ans: select count(*) as c, billing_country
 from invoices 
 group by billing_country
 order by c desc;
 
Q3: What are top 3 values of invoices?
select total
from invoices 
order by total desc
limit 3;

Q4: Which city has best customers? We would like to throw a promotional music festival in city we made the most money.Write a query that returns one city 
that has the highest sum of invoices totals.Return both city name & sum of all total invoices totals.
 select sum(total) as invoice_total, billing_city
from invoices
group by billing_city
order by invoice_total desc;

Ans : Prague city has best customers.

Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. Write a query that returns the best customer?
select sum(total) as invoice_total, customer_id
from invoices
group by customer_id
order by invoice_total desc;


select customer_music.customer_id, customer_music.first_name, customer_music.last_name, sum(invoices.total) as total
from customer_music
join invoices on customer_music.customer_id::integer = invoices.customer_id
group by customer_music.customer_id
order by total desc
limit 1;

Q6: Write a query to return the email, first name, last name, & genre of all rock music listeners.Return your list alphabetically
by emailing with A.

select distinct  email, first_name, last_name
from customer_music
join invoices on customer_music.customer_id = invoices.customer_id
join invoice_line on invoices.invoice_id = invoice_line.invoice_id
where track_id in
    (select track_id from track
	join genre on track.genre_id = genre.genre_id
	where genre.name like 'jazz'
	 )
	order by email ;
	
Q7: lets invite the artist who have written most rock music in our dataset.Write a query that return artist name and total track count of the top 10 rock bands.
   select * from artist;
   select * from album2;
   select * from genre;
   select * from track;  
  select artist.artist_id, artist.name, count(artist.artist_id) as number_of_songs
  from track
  join album2 on album2.album_id = track.album_id
  join artist on artist.artist_id = album2.artist_id
  join genre on genre.genre_id = track.genre_id
  where genre.name like 'rock'
  group by artist.artist_id
  order by number_of_songs;
  
 Q8: Return all the tracks name that have a song length longer than average song length.
     Return the name millisecond for each track.
	 Order by the song length with the longest songs listed first.
	 
	select name,millisecond
	from track
	where millisecond > (
	select avg(millisecond) as avg_track_length
	from track
	order by millisecond desc;
		avg value is 393599.212103910933
		
		
		
 Q9: Find out how much amount spent by each customer on artists?
		Write a query to return customer name, artist name and total spent.
	WITH best_selling_artist AS (SELECT
        artist.artist_id AS artist_id,
        artist.name AS artist_name,
        SUM(invoice_line.unit_price * invoice_line.quantity) AS total_sales
    FROM
        invoice_line
        JOIN track ON track.track_id = invoice_line.track_id
        JOIN album2 ON album2.album_id = track.album_id
        JOIN artist ON artist.artist_id = album2.artist_id
    GROUP BY 1
    ORDER BY 3 DESC
    LIMIT 1
)
		select * from best_selling_artist;

		
 Q10: Lets find out the most popular music genre of each country.
		
WITH popular_genre AS (
    SELECT COUNT(invoice_line.quantity) AS purchases,
        customer_music.country,
        genre.name,
        genre.genre_id,
        ROW_NUMBER() OVER (PARTITION BY customer_music.country ORDER BY COUNT(invoice_line.quantity) DESC) AS rowno
    FROM
        invoice_line
        JOIN invoices ON invoices.invoice_id = invoice_line.invoice_id
        JOIN customer_music ON customer_music.customer_id = invoices.customer_id
        JOIN track ON track.track_id = invoice_line.track_id
        JOIN genre ON genre.genre_id = track.genre_id
    GROUP BY 2, 3, 4
    ORDER BY 2 ASC, 1 DESC
	)
	select * from popular_genre where rowno<=1


		
		
		
		
		
	  
 
